[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=64", "setuptools_scm>=8"]

[project]
authors = [
    {email = "d.stansby@ucl.ac.uk", name = "HiP-CT Project"},
]
classifiers = [
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed",
]
dependencies = [
    "dask",
    "zarr",
]
description = "Convert stacks of images to chunked datasets"
dynamic = [
    "version",
]
keywords = [
]
name = "stack_to_chunk"
optional-dependencies = {dev = [
    "black",
    "build",
    "mypy",
    "pre-commit",
    "pytest",
    "ruff",
    "tox>=4",
    "twine",
], docs = [
    "pydata-sphinx-theme",
    "sphinx",
]}
readme = "README.md"
requires-python = ">=3.11"
license.file = "LICENCE.md"
urls.homepage = "https://github.com/HiPCTProject/stack-to-chunk"

[tool.coverage]
report = {skip_covered = true, sort = "cover"}
run = {branch = true, parallel = true, source = [
    "stack_to_chunk",
]}
paths.source = [
    "src",
    ".tox*/*/lib/python*/site-packages",
]

[tool.mypy]
explicit_package_bases = true
ignore_missing_imports = true
plugins = [
    "numpy.typing.mypy_plugin",
]
strict = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "dask.*",
]

[tool.pytest.ini_options]
addopts = "--color=yes -v"

[tool.ruff]
fix = true
force-exclude = true
target-version = "py311"

[tool.ruff.lint]
ignore = [
    "D107", # Missing docstring
    "D203", # no-blank-line-before-class
    "D212", # multi-line-summary-first-line
    "D401", # imperitave mood
    "D417", # argument description in docstring (unreliable)
    "EM102", # Exception must not use an f-string literal, assign to variable first
    "PLR0913", # too many arguments to function call
    "PLR2004", # no 'magic values'
    "S101", # no assert statements
    "T201", # no print statements
]
per-file-ignores = {"docs/*" = [
    "D100", # Missing docstring in public module
], "test_*" = [
    "S101",
]}
select = [
    "A",
    "ARG",
    "B",
    "BLE",
    "C",
    "COM",
    "D",
    "DJ",
    "DTZ",
    "E",
    "EM",
    "ERA",
    "EXE",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "T",
    "TCH",
    "TID",
    "UP",
    "W",
    "YTT",
]
isort.known-first-party = [
    "stack_to_chunk",
]
mccabe.max-complexity = 18
pep8-naming.classmethod-decorators = [
    "classmethod",
    "pydantic.validator",
]

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/stack_to_chunk/_version.py"

[tool.tomlsort]
all = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
overrides."project.classifiers".inline_arrays = false
overrides."tool.coverage.paths.source".inline_arrays = false
